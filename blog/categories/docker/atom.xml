
<!DOCTYPE html>
<!--[if IEMobile 7 ]><html class="no-js iem7"><![endif]-->
<!--[if lt IE 9]><html class="no-js lte-ie8"><![endif]-->
<!--[if (gt IE 8)|(gt IEMobile 7)|!(IEMobile)|!(IE)]><!--><html class="no-js" lang="en"><!--<![endif]-->
<head>
  <meta charset="utf-8">
  <title>Category: docker - Textstückchen</title>
  <meta name="author" content="Daniel Brunner">

  
  <meta name="description" content="Category: docker">
  

  <!-- http://t.co/dKP3o1e -->
  <meta name="HandheldFriendly" content="True">
  <meta name="MobileOptimized" content="320">
  <meta name="viewport" content="width=device-width, initial-scale=1">

  
  <link rel="canonical" href="http://www.dbrunner.de/blog/categories/docker/atom.xml">
  <link href="/favicon.png" rel="icon">
  <link href="/stylesheets/screen.css" media="screen, projection" rel="stylesheet" type="text/css">
  <link href="/atom.xml" rel="alternate" title="Textstückchen" type="application/atom+xml">
  <script src="/javascripts/modernizr-2.0.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
  <script>!window.jQuery && document.write(unescape('%3Cscript src="./javascripts/libs/jquery.min.js"%3E%3C/script%3E'))</script>
  <script src="/javascripts/octopress.js" type="text/javascript"></script>
  <!--Fonts from Google"s Web font directory at http://google.com/webfonts -->
<link href="//fonts.googleapis.com/css?family=PT+Serif:regular,italic,bold,bolditalic" rel="stylesheet" type="text/css">
<link href="//fonts.googleapis.com/css?family=PT+Sans:regular,italic,bold,bolditalic" rel="stylesheet" type="text/css">

  

</head>

<body   >
  <header role="banner"><hgroup>
  <h1><a href="/">Textstückchen</a></h1>
  
    <h2>Ganz kleine Textstückchen zu Allerlei.</h2>
  
</hgroup>

</header>
  <nav role="navigation"><ul class="subscription" data-subscription="rss">
  <li><a href="/atom.xml" rel="subscribe-rss" title="subscribe via RSS">RSS</a></li>
  
</ul>
  
<form action="https://www.google.com/search" method="get">
  <fieldset role="search">
    <input type="hidden" name="sitesearch" value="www.dbrunner.de">
    <input class="search" type="text" name="q" results="0" placeholder="Search"/>
  </fieldset>
</form>
  
<ul class="main-navigation">
  <li><a href="/">Blog</a></li>
  <li><a href="/publikationen/">Publikationen/Vorträge/Projekte</a></li>
  <li><a href="/blog/archives">Archiv</a></li>
  <li><a href="/impressum/">Impressum</a></li>
</ul>

</nav>
  <div id="main">
    <div id="content">
      <div>
<article role="article">
  
  <header>
    <h1 class="entry-title">Category: docker</h1>
    
  </header>
  
  <?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: docker | Textstückchen]]></title>
  <link href="http://www.dbrunner.de/blog/categories/docker/atom.xml" rel="self"/>
  <link href="http://www.dbrunner.de/"/>
  <updated>2015-12-20T12:26:18+00:00</updated>
  <id>http://www.dbrunner.de/</id>
  <author>
    <name><![CDATA[Daniel Brunner]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[I played with CHICKEN Scheme, Docker and Alpine Linux]]></title>
    <link href="http://www.dbrunner.de/blog/2015/12/19/i-played-with-chicken-scheme/"/>
    <updated>2015-12-19T17:54:50+00:00</updated>
    <id>http://www.dbrunner.de/blog/2015/12/19/i-played-with-chicken-scheme</id>
    <content type="html"><![CDATA[<p>I am looking forward to meet LISP people at the
<a href="https://events.ccc.de/congress/2015/wiki/Main_Page">32c3&rsquo;s</a> <a href="https://events.ccc.de/congress/2015/wiki/Assembly:The_%28un%29employed_schemers_%26_lispers_guild">LISP assembly</a>. The last days I played a bit with different Scheme
implementations including
<a href="http://call-cc.org">CHICKEN scheme</a>. The main feature of CHICKEN is
that it compiles the Scheme code to C and then creates dynamic
libraries and binaries with the C compiler. I thought that combining
these binaries with a minimal Docker container could give me a very
small deployment. So here are my steps:</p>

<h2>Choosing Alpine Linux as a &ldquo;small&rdquo; Linux</h2>

<p>The smallest Linux image for Docker is undoubtly busybox with a size
of about 2.489 MB. But busybox lacks a package manager which makes
installing software painful. Therefore I have chosen
<a href="http://alpinelinux.org">Alpine Linux</a> which comes with package
manager and it&rsquo;s image&rsquo;s size is about 5.234 MB. That&rsquo;s double the
size of the busybox image but still quite small compared to the Ubuntu
image which is about 266 MB.</p>

<h2>Creating a Docker container with CHICKEN</h2>

<p>Alpine Linux comes with the <a href="http://www.muscl-libc.org">musl libc</a> and
I thought it would be best to compile all the CHICKEN stuff with that
libc. Therefore I created a Docker container with gcc and all the
other stuff with this Dockerfile
(<a href="https://github.com/krrrcks/chicken-docker-alpine">Github repository</a>):</p>

<pre><code>FROM alpine:3.2

RUN apk update &amp;&amp; apk add make gcc musl-dev 
RUN wget -O - http://code.call-cc.org/releases/4.10.0/chicken-4.10.0.tar.gz | tar xz

WORKDIR /chicken-4.10.0

RUN make PLATFORM=linux &amp;&amp; make PLATFORM=linux install

RUN rm -fr /chicken-4.10.0 

WORKDIR /

CMD ["csi"]
</code></pre>

<p>This image is quite big (about 161.7 MB) and is available for download
at the <a href="https://hub.docker.com/r/krrrcks/chicken-alpine/">Docker Hub</a>.</p>

<h2>Compiling some CHICKEN code</h2>

<p>For testing purposes I wanted a minimal web server running in the Alpine
Linux image. Therefore I looked through the
<a href="http://wiki.call-cc.org/chicken-projects/egg-index-4.html">egg index</a>
and found <a href="http://wiki.call-cc.org/eggref/4/spiffy">spiffy</a>. I fired
up the <code>chicken-alpine</code> container (but I used <code>ash</code> as command instead
of the <code>csi</code> Scheme interpreter) and created a small web server that
serves some static pages. I wrote a <code>main.scm</code>:</p>

<pre><code>(use spiffy)
(start-server)
</code></pre>

<p>and added some static pages to a <code>./web</code> sub-directory. Then
everything had to be compiled and prepared for deployment:</p>

<pre><code>chicken-install spiffy
csc -deploy main.scm
chicken-install -deploy -p $PWD/main spiffy
</code></pre>

<h2>Deploy in a fresh Alpine Linux image</h2>

<p>After the compilation I copied the <code>main</code> and <code>web</code> directories on my
host machine using <code>docker cp</code> and created the following Dockerfile:</p>

<pre><code class="">FROM alpine:3.2

ADD main /main
ADD web main/web
WORKDIR main

CMD /main/main
</code></pre>

<p>and let <code>docker build -t krrrcks/spiffy-test .</code> do the job. The size
of the resulting image is about 12.37 MB and that&rsquo;s pretty small. I
uploaded that image to the
<a href="https://hub.docker.com/r/krrrcks/spiffy-test/">Docker Hub</a> as well.</p>

<p>To serve the pages I did a <code>docker run -d -p 8080:8080 krrrcks/spiffy-test</code>
(spiffy listens on port 8080 in the default install) and browsed my
static pages.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3. Docker-Meetup in Frankfurt]]></title>
    <link href="http://www.dbrunner.de/blog/2015/01/18/3-docker-meetup-in-frankfurt/"/>
    <updated>2015-01-18T20:05:35+00:00</updated>
    <id>http://www.dbrunner.de/blog/2015/01/18/3-docker-meetup-in-frankfurt</id>
    <content type="html"><![CDATA[<p>Am 13. Januar 2015  fand in Frankfurt das bereits <a href="http://www.meetup.com/Docker-Frankfurt/events/219160756/">dritte Docker-Meetup</a>
statt, hier einige Notizen von mir dazu.</p>

<h2>Neues zum Them Orchestrierung</h2>

<p><a href="https://www.twitter.com/PRossbach">Peter Rossbach</a> hat in einem
munteren Vortrag einige Neuerungen aus dem &ldquo;Docker Universum&rdquo; zum
Thema Orchestrierung vorgestellt. Unter anderem
<a href="https://github.com/docker/machine">Docker Machine</a>,
<a href="https://github.com/docker/swarm">Docker Swarm</a>, Docker Compose
(ehemals <a href="http://fig.sh">fig.sh</a>, das wohl aufgrund von
Aussprachemehrdeutigkeiten umbenannt wurde) etc. Ein sehr
interessanter Überblick, insbesondere da Peter auch die ganzen Sachen
immer mal angefasst und ausprobiert hat. Im Kern scheint es mir jedoch
so zu sein, als wäre die Frage nach &ldquo;Was nimmt man am besten, um
Docker auf einer oder mehreren Maschinen im Produktivbetrieb zu
nutzen?&rdquo; noch recht in Bewegung. Für mich kristallisiert sich für
meine Anwendungsfälle da bisher noch keine überzeugende Lösung
heraus. Was ich jedoch einmal testen werde ist das fig.sh bzw. Docker
Compose, da man damit eigentlich sehr schön in einem YAML-Dokument
mehrere Container und ihre Abhängigkeiten darstellen kann.</p>

<h2>Docker Linking</h2>

<p><a href="http://linsenraum.de">Erkan Yanar</a> hat in einem Einsteigervortrag die
Grundlagen von Links zwischen Containern vorgestellt. Hier scheint die
Entwicklung auch noch in Bewegung zu sein, insbesondere Links über
mehrere Hosts hinweg scheinen doch noch nicht so ganz einfach
handzuhaben zu sein (vorgestellt wurden
<a href="https://github.com/SvenDowideit/dockerfiles/blob/master/ambassador/Dockerfile">Ambassador-Ansätze</a>
mit <a href="http://www.dest-unreach.org/socat/">socat</a> und anderes).</p>

<p>Besonders erhellend fand ich den Hinweis, dass ab Docker Version 1.3
nun bei Links zwischen den Containern die <code>/etc/hosts</code> auch nach
Neustarts von gelinkten Containern immer deren richtige IP-Adresse
erhält, wohingegen die Umgebungsvariablen nur die
Ursprungs-IP-Adressen enthalten (also ein klares &ldquo;Verlasst Euch nicht
auf die Umgebungsvariablen!&rdquo;).</p>

<h2>Netzwerken mit Docker</h2>

<p><a href="https:/www.twitter.com/aschmidt75">Andreas Schmidt</a> stellte eine
ganze Reihe von Varianten vor, mit denen man die Container im Netzwerk
auf unterschiedliche Arten und Weisen verknoten kann. Soweit ganz
interessant, aber nicht meine &ldquo;Liga&rdquo;, wo ich mich gut auskenne.</p>

<h2>Fazit</h2>

<p>Bei Docker in Bezug auf Orchestrierung und Container-Linken gibt es
recht viel Bewegung und für mich kristallisieren sich die
überzeugenden Konzepte noch nicht so richtig heraus, um damit in eine
Produktivumgebung zu gehen. Im Bereich der Entwicklung und der Tests
nutze ich die Container von Docker schon recht gerne, bei
Produktiv-Umgebungen schreckt mich die Vielzahl an Werkzeugen und zum
Teil auch die Komplexität doch noch etwas.</p>

<p>Jedenfalls wieder ein gutes Meetup mit Ideen und Anregungen. Ich finde
das schon sehr außergewöhnlich (besonders wenn man es mit anderen
Branchen vergleicht), dass sich Leute zum Austauschen über Technologie
treffen, Vorträge vorbereiten etc.</p>

<h2>Links zu den Folien</h2>

<ul>
<li><a href="https://speakerdeck.com/rossbachp/docker-meetup-frankfurt-2015-docker-orchestration">Peter Rossbach, Docker Orchestation</a></li>
<li><a href="https://speakerdeck.com/aschmidt75/docker-networking">Andreas Schmidt, Docker Networking</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mind the storage driver for Ubuntu cloud images (on Azure)]]></title>
    <link href="http://www.dbrunner.de/blog/2014/07/24/mind-the-storage-driver-for-ubuntu-cloud-images-on-azure/"/>
    <updated>2014-07-24T12:30:43+00:00</updated>
    <id>http://www.dbrunner.de/blog/2014/07/24/mind-the-storage-driver-for-ubuntu-cloud-images-on-azure</id>
    <content type="html"><![CDATA[<p>A few days ago I wanted to build Firefox OS&#8217; newest release for a
friend. Because I did not wanted these GB of code, binaries etc. on my
notebook I fired up an Ubuntu image on Microsoft Azure. I feared that
at a certain point in the build process I may had to download
everything to my local machine and therefore I installed Docker via a
simple</p>

<pre><code>sudo apt-get install docker.io
</code></pre>

<p>Then I started the build process as laid out on Mozilla&rsquo;s Developer
Network. But, during downloading the source code (that&rsquo;s about 12 GB
of Git repositories from Mozilla and Android), I got a &ldquo;no more space
left on device&rdquo;. That was strange: I had a 100 GB volume attached to
the VM and enough space and inodes left. After some searching I asked
on the IRC channel and got a good hint: &ldquo;What&rsquo;s your storage driver?&rdquo;</p>

<p>Well, I thought that it&rsquo;s AUFS; I wanted to add &ldquo;as usual&rdquo; because
AUFS was available on my notebook from the beginning. But a <code>docker.io
info</code> gave me:</p>

<pre><code>$ sudo docker.io info
Containers: 0
Images: 0
Storage Driver: devicemapper
 Pool Name: docker-8:1-131188-pool
 Data file: /var/lib/docker/devicemapper/devicemapper/data
 Metadata file: /var/lib/docker/devicemapper/devicemapper/metadata
 Data Space Used: 291.5 Mb
 Data Space Total: 102400.0 Mb
 Metadata Space Used: 0.7 Mb
 Metadata Space Total: 2048.0 Mb
Execution Driver: native-0.1
Kernel Version: 3.13.0-29-generic
WARNING: No swap limit support
</code></pre>

<p>I then learned that somehow the DeviceMapper driver only allows a
certain amount of diffs and I reached that amount with my build
process. (Maybe it&rsquo;s possible to relax that restriction but I do not
know how.)</p>

<p>I learned as well that the Ubuntu cloud image that is provided by
Microsoft Azure doesn&rsquo;t have AUFS support. Therefore Docker uses the
DeviceMapper storage driver instead. After I installed the AUFS
support I could export the images, change the storage driver and
import the images again.</p>

<p>It would be nice seeing the Docker documentation being more detailed
on those storage drivers.</p>

<p><strong>(Update 2014-10-23)</strong> Thanks to
 <a href="http://blog.iron.io/2014/10/docker-in-production-what-weve-learned.html">this blog post from Iron.io</a>
 I found some documentation of the devicemapper storage driver. It is
 located in the
 <a href="https://github.com/docker/docker/tree/master/daemon/graphdriver/devmapper">Repository</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Unicode support for Octopress]]></title>
    <link href="http://www.dbrunner.de/blog/2014/06/10/unicode-support-for-octopress/"/>
    <updated>2014-06-10T09:26:22+00:00</updated>
    <id>http://www.dbrunner.de/blog/2014/06/10/unicode-support-for-octopress</id>
    <content type="html"><![CDATA[<p>Well, it seems Octopress/Jekyll would like to have a locale set
for UTF-8 support. I followed <a href="http://www.dominik-gaetjens.de/blog/2012/06/09/utf-8-in-octopress/">this (text in German)</a> hint and now my Dockerfile looks
like this:</p>

<pre><code># dockerfile for octopress

FROM ubuntu:14.04
MAINTAINER krrrcks &lt;krrrcks@krrrcks.net&gt;
ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update; \
  apt-get -q -y upgrade
RUN /usr/sbin/locale-gen en_US.UTF-8; \
  update-locale LANG=en_US.UTF-8
RUN apt-get -q -y install git curl; \
  apt-get clean
RUN git clone git://github.com/imathis/octopress.git /opt/octopress
RUN curl -L https://get.rvm.io | bash -s stable --ruby
ENV HOME /root
RUN echo "export LC_ALL=en_US.UTF-8" &gt;&gt; /root/.bashrc
RUN echo "export LANG=en_US.UTF-8" &gt;&gt; /root/.bashrc
RUN echo "source /usr/local/rvm/scripts/rvm" &gt;&gt; /root/.bashrc; 
RUN /bin/bash -l -c "source /usr/local/rvm/scripts/rvm; \
  rvm install 1.9.3; \
  rvm use 1.9.3; \
  rvm rubygems latest; \
  cd /opt/octopress; \
  gem install bundler; \
  bundle install; \
  rake install" 
RUN echo "rvm use 1.9.3" &gt;&gt; /root/.bashrc

WORKDIR /opt/octopress
EXPOSE 4000
CMD ["/bin/bash"] 
</code></pre>

<p>After playing around with Docker and Octopress I put the whole <code>/opt/octopress</code> folder on my host machine and then
restarted the image with the <code>-v</code> flag. Therefore I can edit the files on my host machine with my favorite editor
and use the container only for producing the HTML files, for preview and for publishing.</p>

<p>The <code>rake preview</code> is a neat feature because the server always looks for changed files and produces the HTML
files on the fly. That means I can edit the files in my editor and could see the resulting pages in a
browser nearly the same time.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Dockerfile for setting up Octopress]]></title>
    <link href="http://www.dbrunner.de/blog/2014/05/26/my-dockerfile-for-setting-up-octopress/"/>
    <updated>2014-05-26T09:24:00+00:00</updated>
    <id>http://www.dbrunner.de/blog/2014/05/26/my-dockerfile-for-setting-up-octopress</id>
    <content type="html"><![CDATA[<p>After my trouble with installing all the dependencies for Octopress I
came up with the following Dockerfile for Docker. This follows the
instructions from the Octopress homepage and uses RVM for managing the
ruby dependencies.</p>

<pre><code># dockerfile for octopress

FROM ubuntu:14.04
MAINTAINER krrrcks &lt;krrrcks@krrrcks.net&gt;
ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update; \
  apt-get -q -y upgrade
RUN apt-get -q -y install git curl; \
  apt-get clean
RUN git clone git://github.com/imathis/octopress.git /opt/octopress
RUN curl -L https://get.rvm.io | bash -s stable --ruby
ENV HOME /root
RUN echo "source /usr/local/rvm/scripts/rvm" &gt;&gt; /root/.bashrc; 
RUN /bin/bash -l -c "source /usr/local/rvm/scripts/rvm; \
  rvm install 1.9.3; \
  rvm use 1.9.3; \
  rvm rubygems latest; \
  cd /opt/octopress; \
  gem install bundler; \
  bundle install; \
  rake install" 
RUN echo "rvm use 1.9.3" &gt;&gt; /root/.bashrc

WORKDIR /opt/octopress
EXPOSE 4000
CMD ["/bin/bash"] 
</code></pre>
]]></content>
  </entry>
  
</feed>

  
    <footer>
      
      
        <div class="sharing">
  
  <a href="//twitter.com/share" class="twitter-share-button" data-url="http://www.dbrunner.de/blog/categories/docker/atom.xml" data-via="krrrcks" data-counturl="http://www.dbrunner.de/blog/categories/docker/atom.xml" >Tweet</a>
  
  
  
</div>

      
    </footer>
  
</article>

</div>

<aside class="sidebar">
  
    <section>
  <h1><a href="/ueber/">Über mich</a></h1>
</section>

<section>
 <h1>Twitter</h1>
 <div>
 <p><br> 
<a href="http://twitter.com/krrrcks" class="twitter-follow-button" data-show-count="">Follow @krrrcks</a>
</div>
</section>


<section>
  <h1>Neueste Einträge</h1>
  <ul id="recent_posts">
    
      <li class="post">
        <a href="/blog/2015/12/19/i-played-with-chicken-scheme/">I played with CHICKEN Scheme, Docker and Alpine Linux</a>
      </li>
    
      <li class="post">
        <a href="/blog/2015/09/04/how-to-use-getbucketlocation-on-amazon-s3-with-racket/">How to use GET Bucket location on Amazon S3 with Racket</a>
      </li>
    
      <li class="post">
        <a href="/blog/2015/08/27/how-to-run-racket-on-the-raspberry-pi-2/">How to run Racket on the Raspberry Pi 2</a>
      </li>
    
      <li class="post">
        <a href="/blog/2015/08/27/running-racket-on-aws-lambda/">Running Racket on AWS Lambda</a>
      </li>
    
      <li class="post">
        <a href="/blog/2015/08/27/lisp-und-ich/">Lisp und ich</a>
      </li>
    
  </ul>
</section>
<section>
  <h1>Kategorien</h1>
    <ul id="category-list"><li><a href='/blog/categories/allerlei/'>allerlei (8)</a></li><li><a href='/blog/categories/ausgehen/'>ausgehen (1)</a></li><li><a href='/blog/categories/aws/'>aws (2)</a></li><li><a href='/blog/categories/azure/'>azure (1)</a></li><li><a href='/blog/categories/behorden/'>behörden (2)</a></li><li><a href='/blog/categories/bucher/'>bücher (1)</a></li><li><a href='/blog/categories/chicken/'>chicken (1)</a></li><li><a href='/blog/categories/common-lisp/'>common lisp (2)</a></li><li><a href='/blog/categories/docker/'>docker (5)</a></li><li><a href='/blog/categories/gesellschaft/'>gesellschaft (1)</a></li><li><a href='/blog/categories/homepage/'>homepage (10)</a></li><li><a href='/blog/categories/it/'>it (22)</a></li><li><a href='/blog/categories/javascript/'>javascript (1)</a></li><li><a href='/blog/categories/linux/'>linux (1)</a></li><li><a href='/blog/categories/lisp/'>lisp (5)</a></li><li><a href='/blog/categories/medien/'>medien (3)</a></li><li><a href='/blog/categories/morgengrauen/'>morgengrauen (1)</a></li><li><a href='/blog/categories/octopress/'>octopress (6)</a></li><li><a href='/blog/categories/org-mode/'>org-mode (2)</a></li><li><a href='/blog/categories/politik/'>politik (8)</a></li><li><a href='/blog/categories/r/'>r (1)</a></li><li><a href='/blog/categories/racket/'>racket (3)</a></li><li><a href='/blog/categories/reisen/'>reisen (3)</a></li><li><a href='/blog/categories/s3/'>s3 (1)</a></li><li><a href='/blog/categories/scheme/'>scheme (1)</a></li><li><a href='/blog/categories/statistik/'>statistik (1)</a></li><li><a href='/blog/categories/steuern/'>steuern (3)</a></li><li><a href='/blog/categories/veranstaltungen/'>veranstaltungen (3)</a></li><li><a href='/blog/categories/wirtschaft/'>wirtschaft (11)</a></li></ul>
</section>





  
</aside>


    </div>
  </div>
  <footer role="contentinfo"><p>
  Copyright &copy; 2015 - Daniel Brunner -
  <span class="credit">Powered by <a href="http://octopress.org">Octopress</a></span>
</p>

</footer>
  







  <script type="text/javascript">
    (function(){
      var twitterWidgets = document.createElement('script');
      twitterWidgets.type = 'text/javascript';
      twitterWidgets.async = true;
      twitterWidgets.src = '//platform.twitter.com/widgets.js';
      document.getElementsByTagName('head')[0].appendChild(twitterWidgets);
    })();
  </script>





</body>
</html>
